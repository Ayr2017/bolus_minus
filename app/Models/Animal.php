<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Casts\Attribute;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Carbon;
use Illuminate\Support\Str;
use Illuminate\Support\Facades\Route;


class Animal extends Model
{
    use HasFactory;
    use SoftDeletes;

    protected $fillable = [
        'name',
        'number',
        'organisation_id',
        'birthday',
        'breed_id',
        'number_rshn',
        'bolus_id',
        'number_rf',
        'number_tavro',
        'number_tag',
        'tag_color',
        'number_collar',
        'status_id',
        'sex',
        'withdrawn_at',
        'is_active'
    ];

    protected $casts = [
        'birthday' => 'datetime',
        'withdrawn_at' => 'datetime',
        'is_active' => 'boolean',
    ];

    public static function boot(): void
    {
        Route::model('animal', Animal::class);
        parent::boot(); // TODO: Change the autogenerated stub
        static::creating(function ($model) {
            $model->uuid = Str::uuid();
        });
    }

    public function organisation(): BelongsTo
    {
        return $this->belongsTo(Organisation::class);
    }

    public function bolus(): BelongsTo
    {
        return $this->belongsTo(Bolus::class);
    }

    public function breed(): BelongsTo
    {
        return $this->belongsTo(Breed::class,);
    }

    public function status(): BelongsTo
    {
        return $this->belongsTo(Status::class);
    }

    /**
     * @return Attribute
     */
    public function birthdayYmd(): Attribute
    {
        return Attribute::make(
            get: fn() => Carbon::make($this->birthday)?->format('Y-m-d'),
        );
    }
}
