name: CI/CD for Backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test Backend
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2 # Укажите версию PHP, подходящую для вашего проекта
          tools: composer, phpunit
          coverage: none

      - name: Remove Cache and Vendor
        run: rm -rf vendor composer.lock

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Setup Environment for PostgreSQL
        run: |
          cp .env.example .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=test_db" >> .env
          echo "DB_USERNAME=test_user" >> .env
          echo "DB_PASSWORD=test_password" >> .env

      - name: Check PostgreSQL Connection
        run: pg_isready -h localhost -p 5432 -U test_user

      - name: Run Migrations
        run: php artisan migrate --force

      - name: List PostgreSQL Tables
        run: |
          PGPASSWORD=test_password psql -h localhost -U test_user -d test_db -c "\dt"

      - name: Run Tests
        run: XDEBUG_MODE=off php artisan test --stop-on-error --debug

  deploy:
    name: Deploy Backend to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git config --global url."ssh://git@github.com/".insteadOf "https://github.com/"

      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
        run: |
          ssh -p 2419 -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_HOST << 'EOF'
              # Переключаемся в директорию проекта
              cd /home/nail/bolus/backend

              # Обновляем код
              git pull origin main

              # Устанавливаем зависимости
              composer install --no-dev --optimize-autoloader

              # Применяем миграции
              docker exec bolus_backend php artisan migrate --force

              # Очищаем кэши
              docker exec bolus_backend php artisan config:clear
              docker exec bolus_backend php artisan cache:clear
              docker exec bolus_backend php artisan view:clear

              # Перезапускаем контейнер
              docker container restart bolus_backend
          EOF
